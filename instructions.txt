1. In the command line, navigate to the parent directory of where your group project is.

2. Run the command `npx create-react-app project-three`.

3. `create-react-app` now automatically uses the latest release of React, version 18. Due to several conflicting packages with React version 18, follow the steps below to ensure that all activities work as intended.

    * Delete the `package-lock.json` file and `node_modules` folder from directory.

* While you're at it, delete the `README.md` file and the `src` folder from the directory

    * Downgrade `react` to 17.0.2 inside of the `package.json` file.

    * Downgrade `react-dom` to 17.0.2 inside of the `package.json` file.

    * Downgrade `@testing-library/react` to ^11.1.0 inside of the `package.json` file.

* Also downgrade `@testing-library/jest-dom` to ^5.16.4 (I guess?)

    * Your `package.json` file should look like the following:

        ```js
        "dependencies": {
            "@testing-library/jest-dom": "^5.16.4",
            "@testing-library/react": "^11.1.0",
            "@testing-library/user-event": "^13.5.0",
            "react": "17.0.2",
            "react-dom": "17.0.2",
            "react-scripts": "5.0.1",
            "web-vitals": "^2.1.4"
        },
        ```

    * Run `npm install` to ensure that your project is now running React version 17.

4. After `create-react-app` has completed (which can take a few minutes), run the command `npm i bootstrap dotenv axios --save` to add dependencies that we will need in later activities.

5. Copy `22-State/01-Activities/28-Stu_Mini-Project/Main/src/` from `02-Stu_Create-React-App` and paste it into the directory. (It should now be in the same folder as `node_modules` and `public`)

6. Run the command `npm install react-redux redux`

7. Run `npm start` to ensure that the source files were transplanted successfully.